(window.webpackJsonp=window.webpackJsonp||[]).push([[174],{538:function(e,n,s){"use strict";s.r(n);var r=s(14),a=Object(r.a)({},(function(){var e=this,n=e._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"_3-7-render-方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-render-方法"}},[e._v("#")]),e._v(" 3.7 render 方法")]),e._v(" "),n("h3",{attrs:{id:"_1、render-string-view"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、render-string-view"}},[e._v("#")]),e._v(" 1､render(String view)")]),e._v(" "),n("p",[e._v("render(String view) 方法将对 view 所指向的模板进行渲染，view 参数最终指向的模板文件规则如下：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("String template = baseViewPath + viewPath + view\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("其中 view 即为 render(String view) 方法所携带的参数值，而 baseViewPath、viewPath 则是在路由配置时指定的两个值，例如：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('public void configRoute(Routes me) {\n   // baseViewPath 为 "/_view"，该 Routes 对象之下映射的所有 Controller 都将取这个值\n   me.setBaseViewPath("/_view");\n   \n   // basePath 为第三个参数 "/index"\n   me.add("/", IndexController.class, "/index");\n   \n   // 第三个参数省略时， basePath 取第一个参数的值 : "/project"\n   me.add("/project", ProjectController.class);\n}\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br")])]),n("p",[e._v("注意看上面的代码，其中的 me.setBaseViewPath(...) 指定的值即为 baseViewPath，其中 me.add(...) 第三个参数即为 viewPath，当第三个参数省略时默认取第一个参数的值。")]),e._v(" "),n("p",[e._v("针对上述配置，在 IndexController 中使用 render 时的模板文件如下：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('public class IndexController extends Controller {\n   public void demo() {\n     // 模板指向 : "/_view/index/abc.html"\n     render("abc.html");\n   }\n}\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br")])]),n("p",[e._v('上述的 render("abc.html") 将指向 webapp 目录下面的 "/_view/index/abc.html" 这个模板。')]),e._v(" "),n("p",[e._v('使用技巧：baseViewPath 配置为项目存放模板的总的根目录。viewPath 配置为当前被映射的 controller 的子目录。最终的效果就是 render(view) 的参数 view 永远是一个最终的文件名，例如： render("index.html")，从而消除掉了 view 参数中的目录部分。')]),e._v(" "),n("p",[e._v('当需要打破 baseViewPath 与 viewPath 这两个参数的限制时，view 参数以 "/" 打头即可：')]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('render("/other_path/my_path/index.html");\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v('view 参数以 "/" 打头时，将勿略掉 baseViewPath 与 viewPath 这两个值：')]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('String template = "/other_path/my_path/index.html";\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("h3",{attrs:{id:"_2、render-string-view-方法配置模板引擎"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、render-string-view-方法配置模板引擎"}},[e._v("#")]),e._v(" 2、render(String view) 方法配置模板引擎")]),e._v(" "),n("p",[e._v("render(String view) 将根据 configConstant(Constants me) 中配置的 me.setViewType(ViewType) 方法选择一种模板引进渲染模板文件，例如：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("public void configConstant(Constants me) {\n  me.setViewType(ViewType.JFINAL_TEMPLATE);\n}\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("p",[e._v("以上配置将选择 jfinal 内置的 enjoy 模板引擎渲染模板，该配置是默认值，在使用时无需配置。注意该配置仅仅针对 Controller.render(String view) 方法，其它 render 系方法完全不受影响。")]),e._v(" "),n("h3",{attrs:{id:"_3、render-系列其它方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3、render-系列其它方法"}},[e._v("#")]),e._v(" 3、render 系列其它方法")]),e._v(" "),n("p",[e._v("render系列方法将渲染不同类型的视图并返回给客户端。JFinal目前支持的视图类型有：JFinal Template、FreeMarker、JSP、Velocity、JSON、File、Text、Html、QrCode 二维码 等等。除了JFinal支持的视图型以外，还可以通过继承Render抽象类来无限扩展视图类型。")]),e._v(" "),n("p",[e._v("通常情况下使用Controller.render(String)方法来渲染视图，使用Controller.render(String)时的视图类型由JFinalConfig.configConstant(Constants constants)配置中的constants. setViewType(ViewType)来决定，该设置方法支持的ViewType有：JFINAL_TEMPLATE、FreeMarker、JSP、Velocity，不进行配置时的缺省配置为JFINAL_TEMPLATE。")]),e._v(" "),n("p",[e._v("此外，还可以通过 constants.setRenderFactory(RenderFactory)来设置Controller中所有render系列方法所使用的Render实现类。")]),e._v(" "),n("p",[e._v("以上是 render 系方法使用例子：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('// 渲染名为test.html的视图，且视图类型为 JFinal Template\nrenderTemplate(”test.html”);\n \n// 生成二维码\nrenderQrCode("content");\n \n// 渲染名为test.html的视图，且视图类型为FreeMarker\nrenderFreeMarker(”test.html”);\n \n// 渲染名为test.html的视图，且视图类型为Velocity\nrenderVelocity(“test.html”);\n \n// 将所有setAttr(..)设置的变量转换成 json 并渲染\nrenderJson();\n \n// 以 "users" 为根，仅将 userList 中的数据转换成 json 并渲染\nrenderJson(“users”, userList);\n \n// 将user对象转换成 json 并渲染\nrenderJson(user);\n \n// 直接渲染 json 字符串\nrenderJson("{\\"age\\":18}" );\n \n// 仅将setAttr(“user”, user)与setAttr(“blog”, blog)设置的属性转换成json并渲染\nrenderJson(new  String[]{"user", "blog"});\n \n// 渲染名为test.zip的文件，一般用于文件下载\nrenderFile("test.zip");\n \n// 渲染纯文本内容 "Hello JFinal"\nrenderText("Hello JFinal");\n \n// 渲染 Html 内容 "Hello Html"\nrenderHtml("Hello Html");\n \n// 渲染名为 test.html 的文件，且状态为 404\nrenderError(404 , "test.html");\n \n// 渲染名为 test.html 的文件，且状态为 500\nrenderError(500 , "test.html");\n \n// 不渲染，即不向客户端返回数据\nrenderNull();\n \n// 使用自定义的MyRender来渲染\nrender(new MyRender());\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br"),n("span",{staticClass:"line-number"},[e._v("15")]),n("br"),n("span",{staticClass:"line-number"},[e._v("16")]),n("br"),n("span",{staticClass:"line-number"},[e._v("17")]),n("br"),n("span",{staticClass:"line-number"},[e._v("18")]),n("br"),n("span",{staticClass:"line-number"},[e._v("19")]),n("br"),n("span",{staticClass:"line-number"},[e._v("20")]),n("br"),n("span",{staticClass:"line-number"},[e._v("21")]),n("br"),n("span",{staticClass:"line-number"},[e._v("22")]),n("br"),n("span",{staticClass:"line-number"},[e._v("23")]),n("br"),n("span",{staticClass:"line-number"},[e._v("24")]),n("br"),n("span",{staticClass:"line-number"},[e._v("25")]),n("br"),n("span",{staticClass:"line-number"},[e._v("26")]),n("br"),n("span",{staticClass:"line-number"},[e._v("27")]),n("br"),n("span",{staticClass:"line-number"},[e._v("28")]),n("br"),n("span",{staticClass:"line-number"},[e._v("29")]),n("br"),n("span",{staticClass:"line-number"},[e._v("30")]),n("br"),n("span",{staticClass:"line-number"},[e._v("31")]),n("br"),n("span",{staticClass:"line-number"},[e._v("32")]),n("br"),n("span",{staticClass:"line-number"},[e._v("33")]),n("br"),n("span",{staticClass:"line-number"},[e._v("34")]),n("br"),n("span",{staticClass:"line-number"},[e._v("35")]),n("br"),n("span",{staticClass:"line-number"},[e._v("36")]),n("br"),n("span",{staticClass:"line-number"},[e._v("37")]),n("br"),n("span",{staticClass:"line-number"},[e._v("38")]),n("br"),n("span",{staticClass:"line-number"},[e._v("39")]),n("br"),n("span",{staticClass:"line-number"},[e._v("40")]),n("br"),n("span",{staticClass:"line-number"},[e._v("41")]),n("br"),n("span",{staticClass:"line-number"},[e._v("42")]),n("br"),n("span",{staticClass:"line-number"},[e._v("43")]),n("br"),n("span",{staticClass:"line-number"},[e._v("44")]),n("br"),n("span",{staticClass:"line-number"},[e._v("45")]),n("br"),n("span",{staticClass:"line-number"},[e._v("46")]),n("br"),n("span",{staticClass:"line-number"},[e._v("47")]),n("br")])]),n("p",[e._v("注意：")]),e._v(" "),n("p",[e._v("1：IE不支持contentType为application/json,在ajax上传文件完成后返回json时IE提示下载文件,解决办法是使用：render(new JsonRender().forIE())或者render(new JsonRender(params).forIE())。这种情况只出现在IE浏览器 ajax 文件上传，其它普通ajax请求不必理会。")]),e._v(" "),n("p",[e._v("2：除renderError方法以外，在调用render系列的方法后程序并不会立即返回，如果需要立即返回需要使用return语句。在一个action中多次调用render方法只有最后一次有效。")]),e._v(" "),n("h3",{attrs:{id:"_4、定制-controller-render-系方法的实现类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4、定制-controller-render-系方法的实现类"}},[e._v("#")]),e._v(" 4、定制 Controller.render 系方法的实现类")]),e._v(" "),n("p",[e._v("jfinal 提供了 RenderFactory 来定制 Controller.render 所有 render 方法的实现类，以下是定制 Controller.render(String view) 实现类的代码：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// 定制一个 MyRender\npublic class MyRender extends Render {\n  ...\n}\n \n// 扩展 RenderFactory，用于将 Controller.render(String view)\n// 切换到自己定制的 MyRender 上去\npublic class MyRenderFactory extends RenderFactory {\n   public Render getRender(String view) {\n      return new MyRender(view);\n   }\n}\n \n// 配置生效\npublic void configConstant(Constants me) {\n   me.setRenderFactory(new MyRenderFactory());\n}\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br"),n("span",{staticClass:"line-number"},[e._v("15")]),n("br"),n("span",{staticClass:"line-number"},[e._v("16")]),n("br"),n("span",{staticClass:"line-number"},[e._v("17")]),n("br")])]),n("p",[e._v("以上代码中 MyRenderFactory.getRender(...) 方法重写了父类 RenderFactory.getRender(...) 方法，将切换掉 Controller.render(String view) 的实现类。同理，可以通过覆盖掉 getJsonRender() 来切换掉 Controller.renderJson()。 Controller 中所有 render 方法的实现类都可以通过这种方式来切换到自己的实现类上去，极度方便灵活，")])])}),[],!1,null,null,null);n.default=a.exports}}]);