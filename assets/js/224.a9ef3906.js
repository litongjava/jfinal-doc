(window.webpackJsonp=window.webpackJsonp||[]).push([[224],{576:function(a,n,s){"use strict";s.r(n);var t=s(14),e=Object(t.a)({},(function(){var a=this,n=a._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h1",{attrs:{id:"_9-3-使用外部配置文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9-3-使用外部配置文件"}},[a._v("#")]),a._v(" 9.3 使用外部配置文件")]),a._v(" "),n("p",[a._v("上一个示例仅展示了java硬编码式的配置，更多的应用场景是使用外部配置文件，灵活配置调度策略，以便于随时改变调度策略，如下是外部配置的代码示例：")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("cron4j=task1, task2\ntask1.cron=* * * * *\ntask1.class=com.xxx.TaskAaa\ntask1.daemon=true\ntask1.enable=true\n \ntask2.cron=* * * * *\ntask2.class=com.xxx.TaskBbb\ntask2.daemon=true\ntask2.enable=false\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br")])]),n("p",[a._v('上例中的cront4j是所谓的配置名称：configName，可以随便取名，这个名称在创建Cron4jPlugin对象时会被用到，如果创建Cron4jPlugin对象时不提供名称则默认值为 "cron4j"。')]),a._v(" "),n("p",[a._v("上例中的configName后面紧跟着的是task1、task2，表示当前配置的两个task 的名称，这两个名称规定了后续的配置将以其打头，例如后面的task1.cron、task2.cron都是以这两个task名称打头的。")]),a._v(" "),n("p",[a._v("上例中的task1.cron是指该task的cron表达式，task1.class是指该task要调度的目标java类，该java类需要实现Runnable接口，task1.daemon是指被调度的任务线程是否为守护线程，task1.enable是指该task是开启还是停用，这个配置不是必须的，可以省略，省略时默认表示开启。同理task2的配置与task1的意义相同，只是taskName不同。")]),a._v(" "),n("p",[a._v("总结一下：configName指定taskName，多个taskName可以逗号分隔，而每个taskName指定具体的task，每个具体的task有四项配置：cron、class、deamon、enable，每个配置以taskName打头。")]),a._v(" "),n("p",[a._v("假定配置文件名为config.txt，配置完成以后Cron4jPlugin的创建方式可以如下：")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('cp = new Cron4jPlugin("config.txt");\ncp = new Cron4jPlugin("config.txt", "cron4j");\n \ncp = new Cron4jPlugin(PropKit.use("config.txt"));\ncp = new Cron4jPlugin(PropKit.use("config.txt"), "cron4j");\n \nme.add(cp);\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br")])]),n("p",[a._v("以上代码中，前四行代码是利用配置文件创建Cron4jPlugin对象的四种方式，第一行代码只传入了配置文件名，省去了configName，那么默认值为“cron4j”。第二代码与第一行代码本质一样，只是指定了其configName。第三与第四行代码与前两行代码类似，仅仅是利用PropKit对其进行了加载。")]),a._v(" "),n("p",[a._v('请注意：这里所说的configName，就是前面示例中配置项 cron4j=task1, task2 中的 "cron4j"，这个configName相当于就是Cron4jPlugin寻找的配置入口。')])])}),[],!1,null,null,null);n.default=e.exports}}]);