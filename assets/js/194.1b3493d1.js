(window.webpackJsonp=window.webpackJsonp||[]).push([[194],{548:function(e,s,a){"use strict";a.r(s);var n=a(14),r=Object(n.a)({},(function(){var e=this,s=e._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"_5-3-model"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-model"}},[e._v("#")]),e._v(" 5.3 Model")]),e._v(" "),s("h3",{attrs:{id:"_1、基本用法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、基本用法"}},[e._v("#")]),e._v(" 1、基本用法")]),e._v(" "),s("p",[e._v("Model是ActiveRecord中最重要的组件之一，它充当MVC模式中的Model部分。以下是Model定义示例代码：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("public class User extends Model<User> {\n    public static final User dao = new User().dao();\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("p",[e._v("以上代码中的User通过继承Model，便立即拥有的众多方便的操作数据库的方法。在User中声明的dao静态对象是为了方便查询操作而定义的，该对象并不是必须的。基于ActiveRecord的Model无需定义属性，无需定义getter、setter方法，无需XML配置，无需Annotation配置，极大降低了代码量。")]),e._v(" "),s("p",[e._v("以下为Model的一些常见用法：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('// 创建name属性为James,age属性为25的User对象并添加到数据库\nnew User().set("name", "James").set("age", 25).save();\n \n// 删除id值为25的User\nUser.dao.deleteById(25);\n \n// 查询id值为25的User将其name属性改为James并更新到数据库\nUser.dao.findById(25).set("name", "James").update();\n \n// 查询id值为25的user, 且仅仅取name与age两个字段的值\nUser user = User.dao.findByIdLoadColumns(25, "name, age");\n \n// 获取user的name属性\nString userName = user.getStr("name");\n \n// 获取user的age属性\nInteger userAge = user.getInt("age");\n \n// 查询所有年龄大于18岁的user\nList<User> users = User.dao.find("select * from user where age>18");\n \n// 分页查询年龄大于18的user,当前页号为1,每页10个user\nPage<User> userPage = User.dao.paginate(1, 10, "select *", "from user where age > ?", 18);\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br")])]),s("p",[e._v("以上用法将 dao 对象声明在了 model 中仅为方便展示，在实际应用中应该将 dao 对象放在 Service 中，并且让其成为 private，这样可以保障 sql 以及数据库操作被限定在 service 层中。可以通过下载官网首页的 jfinal_demo_for_maven 来参考 dao 在 Service 层中的用法。")]),e._v(" "),s("p",[e._v("特别注意：User中定义的 public static final User dao对象是全局共享的，只能用于数据库查询，不能用于数据承载对象。数据承载需要使用new User().set(…)来实现。")]),e._v(" "),s("h3",{attrs:{id:"_2、常见错误"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、常见错误"}},[e._v("#")]),e._v(" 2、常见错误")]),e._v(" "),s("p",[e._v("有不少用户经常在使用 model.find(....) 这类方法时碰到 NullPointerException 异常，通常是由于该 model 没有使用 ActionRecordPlugin.addMapping(....) 进行过映射。 建议通过生成器自动化生成映射，无需手工添加这类代码，生成器在本站首页下载 jfinal demo，里面有提供。")])])}),[],!1,null,null,null);s.default=r.exports}}]);