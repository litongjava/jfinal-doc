(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{417:function(e,n,s){"use strict";s.r(n);var t=s(14),i=Object(t.a)({},(function(){var e=this,n=e._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"_2-9-propkit-configuration-reading"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-9-propkit-configuration-reading"}},[e._v("#")]),e._v(" 2.9 PropKit configuration reading")]),e._v(" "),n("p",[e._v("The PropKit utility class is used to read external key-value pair configuration files. PropKit can be used anywhere in the system with extreme convenience. The format of the configuration file is as follows:")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("userName=james\nemail=no-reply@jfinal.com\ndevMode=true\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("p",[e._v("Below is a code example of PropKit:")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('PropKit.use("config.txt");\nString userName = PropKit.get("userName");\nString email = PropKit.get("email");\n \n// Using Prop in combination\nProp p = PropKit.use("config.txt");\nBoolean devMode = p.getBoolean("devMode");\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br")])]),n("p",[e._v("Below is a specific usage example in a project:")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('public class AppConfig extends JFinalConfig {\n  public void configConstant(Constants me) {\n    // The first time you use the \'use\' method to load a configuration, it becomes the primary configuration. You can directly retrieve its values using PropKit.get(...)\n    PropKit.use("a_little_config.txt");\n    me.setDevMode(PropKit.getBoolean("devMode"));\n  }\n \n  public void configPlugin(Plugins me) {\n    // For configurations not loaded for the first time using \'use\', you need to specify the configuration file name each time using \'use\' before retrieving its values.\n    String redisHost = PropKit.use("redis_config.txt").get("host");\n    int redisPort = PropKit.use("redis_config.txt").getInt("port");\n    RedisPlugin rp = new RedisPlugin("myRedis", redisHost, redisPort);\n    me.add(rp);\n \n    // For configurations not loaded for the first time using \'use\', you can also first obtain a Prop object and then retrieve its values through this object.\n    Prop p = PropKit.use("db_config.txt");\n    DruidPlugin dp = new DruidPlugin(p.get("jdbcUrl"), p.get("user")â€¦);\n    me.add(dp);\n  }\n}\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br"),n("span",{staticClass:"line-number"},[e._v("15")]),n("br"),n("span",{staticClass:"line-number"},[e._v("16")]),n("br"),n("span",{staticClass:"line-number"},[e._v("17")]),n("br"),n("span",{staticClass:"line-number"},[e._v("18")]),n("br"),n("span",{staticClass:"line-number"},[e._v("19")]),n("br"),n("span",{staticClass:"line-number"},[e._v("20")]),n("br")])]),n("p",[e._v("As shown in the code above, PropKit can load multiple configuration files simultaneously. You can directly operate on the first configuration file loaded using the "),n("code",[e._v("PorpKit.get(...)")]),e._v(" method. For configuration files not loaded first, you need to use "),n("code",[e._v("PropKit.use(...).get(...)")]),e._v(" to operate.")]),e._v(" "),n("p",[e._v("PropKit's use is not limited to within the "),n("code",[e._v("YourJFinalConfig")]),e._v(" class; it can be used anywhere in the project. Additionally, after the "),n("code",[e._v("PropKit.use(...)")]),e._v(" method loads the configuration file content, it caches the data in memory. You can clear the cached content using "),n("code",[e._v("PropKit.useless(...)")]),e._v(".")])])}),[],!1,null,null,null);n.default=i.exports}}]);