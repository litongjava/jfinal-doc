(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{428:function(e,t,a){"use strict";a.r(t);var s=a(14),n=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"_2-8-onstart-and-onstop-callback-configuration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-8-onstart-and-onstop-callback-configuration"}},[e._v("#")]),e._v(" 2.8 onStart and onStop callback configuration")]),e._v(" "),t("p",[e._v("In the JFinalConfig subclass, you can add "),t("code",[e._v("onStart()")]),e._v(" and "),t("code",[e._v("onStop()")]),e._v(" methods. JFinal will callback these two methods respectively after the system has finished starting and before the system shuts down:")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// Called after the system has started\npublic void onStart() {\n}\n \n// Called before the system shuts down\npublic void onStop() {\n}\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("p",[e._v("These two methods provide a convenient way for developers to perform additional operations after the project starts and before it shuts down. For example, after the system starts, you can create a scheduling thread or write back to the cache before the system shuts down.")]),e._v(" "),t("p",[e._v("Note: In versions of jfinal prior to 3.6, these two methods were named "),t("code",[e._v("afterJFinalStart()")]),e._v(" and "),t("code",[e._v("beforeJFinalStop()")]),e._v(". To reduce the cognitive load, code input, and the likelihood of input errors, jfinal version 3.6 changed to the current shorter method names. The old method names are still retained and can still be used, making it easy for older projects to upgrade to the latest version of jfinal.")])])}),[],!1,null,null,null);t.default=n.exports}}]);