(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{426:function(e,t,n){"use strict";n.r(t);var r=n(14),o=Object(r.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"_2-6-configinterceptor"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-configinterceptor"}},[e._v("#")]),e._v(" 2.6 configInterceptor")]),e._v(" "),t("h3",{attrs:{id:"_1-configuring-global-interceptors"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-configuring-global-interceptors"}},[e._v("#")]),e._v(" 1. Configuring Global Interceptors")]),e._v(" "),t("p",[e._v("The "),t("code",[e._v("configInterceptor")]),e._v(" method is used to configure global interceptors. Global interceptors are divided into two categories: Control Layer and Business Layer. Below is a configuration example:")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("public void configInterceptor(Interceptors me) {\n    // The following two lines of code configure global interceptors for the control layer\n    me.add(new AuthInterceptor());\n    me.addGlobalActionInterceptor(new AaaInterceptor());\n    \n    // The line below configures the global interceptor for the business layer\n    me.addGlobalServiceInterceptor(new BbbInterceptor());\n}\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br")])]),t("p",[e._v("The above methods "),t("code",[e._v("me.add(...)")]),e._v(" and "),t("code",[e._v("me.addGlobalActionInterceptor(...)")]),e._v(" are completely equivalent and both configure interceptors that intercept all action methods in Controllers. Meanwhile, the interceptor configured by "),t("code",[e._v("me.addGlobalServiceInterceptor(...)")]),e._v(" will intercept all public methods in the business layer.")]),e._v(" "),t("p",[e._v('Note: The so-called "business layer" mentioned above essentially refers to anything other than the "control layer". It doesn\'t necessarily have to be the business layer; it could be any class other than the controller.')]),e._v(" "),t("p",[e._v("Interceptors configured in the manner mentioned above can be removed at the method definition location using the "),t("code",[e._v("@Clear")]),e._v(" annotation. The specific usage will be detailed in subsequent sections related to the "),t("code",[e._v("@Clear")]),e._v(" annotation.")]),e._v(" "),t("h3",{attrs:{id:"_2-levels-granularity-of-interceptor-configuration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-levels-granularity-of-interceptor-configuration"}},[e._v("#")]),e._v(" 2. Levels/Granularity of Interceptor Configuration")]),e._v(" "),t("p",[e._v("The granularity of Interceptor configuration is divided into four levels: Global, Routes, Class, and Method. The configuration granularity mentioned above is global. Configurations for the Routes, Class, and Method levels will be detailed in subsequent sections.")])])}),[],!1,null,null,null);t.default=o.exports}}]);