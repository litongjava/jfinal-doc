(window.webpackJsonp=window.webpackJsonp||[]).push([[154],{506:function(e,r,n){"use strict";n.r(r);var a=n(14),t=Object(a.a)({},(function(){var e=this,r=e._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"_14-5-renderfactory"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-5-renderfactory"}},[e._v("#")]),e._v(" 14.5 RenderFactory")]),e._v(" "),r("p",[e._v("JFinal 3.0 对 render 模块做了全面重构，抽取出了IRenderFactory接口，而原来的RenderFactory成为了接口的默认实现类，去除了原来的IMainRenderFactory、IErrorRenderFactory、IXmlRenderFactory三个接口，所有对 render 的扩展与定制全部都可以通过继承RenderFactory来实现，3.0版本的render模块可对所有render进行切换与定制，并且扩展方式完全一致。如果老项目对IMainRenderFactory做过扩展，只需要照如下方式进行升级：")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("public class MyRenderFactory extends RenderFactory {\n  public Render getRender(String view) {\n     return new MyRender(view);\n  }\n}\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br"),r("span",{staticClass:"line-number"},[e._v("5")]),r("br")])]),r("p",[e._v("同理，如果以前对 IErrorRenderFactory 或者 IXmlRenderFactory 做过扩展的，只需要在上面的MyRenderFactory类中添加上getErrorRender(…) 与 getXmlRender(…) 方法即可。扩展完以后在configConstant 中进行如下配置：")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("public void configConstant(Constants me) {\n  me.setRenderFactory(new MyRenderFactory());\n}\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br")])]),r("p",[e._v("JFinal 3.0 对所有render扩展，采取了完全一致的扩展方式，学习成本更低，使用更方便，升级也很方便。此外，原来RenderFactory类中的me() 已经被取消，老项目对此有依赖的只需要将RenderFactory.me() 直接改为RenderManager.me().getRenderFactory() 即可。")])])}),[],!1,null,null,null);r.default=t.exports}}]);