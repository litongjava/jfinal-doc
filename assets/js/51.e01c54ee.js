(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{404:function(e,t,o){"use strict";o.r(t);var a=o(14),s=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"_14-2-ret"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_14-2-ret"}},[e._v("#")]),e._v(" 14.2 Ret")]),e._v(" "),t("p",[e._v("If the project to be upgraded has never used Ret, then this section can be ignored. If you are using jfinal 3.2, 3.3, 3.4, or higher versions of jfinal, you can also ignore this section.")]),e._v(" "),t("p",[e._v("JFinal 3.2 has improved the Ret utility class to make it more suitable for API projects that interact using JSON data formats. The new version has only one status name: "),t("code",[e._v("state")]),e._v(', with values of either "ok" or "fail." The old version has two status names: '),t("code",[e._v("isOk")]),e._v(" and "),t("code",[e._v("isFail")]),e._v(', with values of either "true" or "false."')]),e._v(" "),t("p",[e._v("Therefore, the JSON data generated by the new and old versions of the Ret object will differ. For most web projects, the upgrade method is as follows:")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("Use the search and replace function to replace "),t("code",[e._v("ret.isOk")]),e._v(" with "),t("code",[e._v('ret.state == "ok"')]),e._v(" in HTML and JS files.")])]),e._v(" "),t("li",[t("p",[e._v("Use the search and replace function to replace "),t("code",[e._v("ret.isFail")]),e._v(" with "),t("code",[e._v('ret.state == "fail"')]),e._v(" in HTML and JS files.")])])]),e._v(" "),t("p",[e._v("If you want to minimize code changes during the upgrade, you can call the "),t("code",[e._v("Ret.setToOldWorkMode()")]),e._v(" method to continue using the old version mode.")])])}),[],!1,null,null,null);t.default=s.exports}}]);