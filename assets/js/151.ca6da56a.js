(window.webpackJsonp=window.webpackJsonp||[]).push([[151],{504:function(t,e,s){"use strict";s.r(e);var a=s(14),l=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"_14-2-ret"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_14-2-ret"}},[t._v("#")]),t._v(" 14.2 Ret")]),t._v(" "),e("p",[t._v("如果待升级项目中未使用过 Ret，那么可以忽略本小节。如果是 jfinal 3.2、3.3、3.4 或者更高版本的 jfinal 也可以忽略。")]),t._v(" "),e("p",[t._v("JFinal 3.2 对Ret工具类进行了改进，使其更加适用于json数据格式交互的API类型项目。新版本状态名只有一个：state，取值为：ok/fail，而老版本状态名有两个：isOk与isFail，取值为：true/false。")]),t._v(" "),e("p",[t._v("所以，新旧版本Ret对象生成的json数据会有差异，对于大多数web项目来说，升级方法如下：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v('利用查找替换功能将 html 与js文件中的 ret.isOk 替换为 ret.state == "ok"')])]),t._v(" "),e("li",[e("p",[t._v('利用查找替换功能将 html 与js文件中的 ret.isFail 替换为 ret.state == "fail"')])])]),t._v(" "),e("p",[t._v("如果希望尽可能小的改动代码进行升级，可以调用一次Ret.setToOldWorkMode()方法沿用老版本模式即可。")])])}),[],!1,null,null,null);e.default=l.exports}}]);