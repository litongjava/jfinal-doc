(window.webpackJsonp=window.webpackJsonp||[]).push([[220],{572:function(s,e,a){"use strict";a.r(e);var n=a(14),t=Object(n.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"_8-3-redis与cache"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-redis与cache"}},[s._v("#")]),s._v(" 8.3 Redis与Cache")]),s._v(" "),e("h3",{attrs:{id:"_1、基本用法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、基本用法"}},[s._v("#")]),s._v(" 1、基本用法")]),s._v(" "),e("p",[s._v("Redis与Cache联合起来可以非常方便地使用Redis服务，Redis对象通过use()方法来获取到Cache对象，Cache对象提供了丰富的API用于使用Redis服务，下面是具体使用示例：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('public void redisDemo() {\n  // 获取名称为bbs的Redis Cache对象\n  Cache bbsCache = Redis.use("bbs");\n  bbsCache.set("key", "value");\n  bbsCache.get("key");\n \n  // 获取名称为news的Redis Cache对象\n  Cache newsCache = Redis.use("news");\n  newsCache.set("k", "v");\n  newsCache.get("k");\n \n  // 最先创建的Cache将成为主Cache，所以可以省去cacheName参数来获取\n  bbsCache = Redis.use();    // 主缓存可以省去cacheName参数\n  bbsCache.set("jfinal", "awesome");\n}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[s._v("以上代码中通过”bbs”、”news”做为use方法的参数分别获取到了两个Cache对象，使用这两个对象即可操作其所对应的Redis服务端。")]),s._v(" "),e("p",[s._v("通常情况下只会创建一个RedisPlugin连接一个redis服务端，使用Redis.use().set(key,value)即可。")]),s._v(" "),e("p",[s._v("注意：使用 incr、incrBy、decr、decrBy 方法操作的计数器，需要使用 getCounter(key) 进行读取而不能使用 get(key)，否则会抛反序列化异常。同理：incrBy(key, value) 操作不能使用 set(key, value) 。")]),s._v(" "),e("h3",{attrs:{id:"_2、新用法-建议"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、新用法-建议"}},[s._v("#")]),s._v(" 2、新用法(建议)")]),s._v(" "),e("p",[s._v("高版本 jfinal 针对 Redis、Cache 这两个类新增了 call 方法，该方法直接暴漏出 Jedis 对象供使用，可以绕过序列化、反序列化过程")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('// 使用 lambda 开放 Jedis API\nLong ret = Redis.call(j -> j.incrBy("key", 1));\n \nLong ret = Redis.call(jedis -> {\n    return jedis.incrBy("key", 1);\n});\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v("如果配置了多个 cache 可以通过 Redis.use(...) 先获取对应的 cache 对象再进行操作")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('// 指定 cacheName 参数再操作\nLong ret = Redis.use("mycache").call(j -> j.incrBy("key", 1));\n \n// Redis.use() 不带参表示获取默认 cache\nLong ret = Redis.use().call(j -> j.incrBy("key", 1));\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("存入 String 以外类型数可以将其先转成 json 再操作")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('User user = dao.findById(userId);\nString userJson = JsonKit.toJson(user);\n \nRedis.call(jedis -> {\n    return jedis.set("user", userJson);\n});\n \n// 或者简化为下面代码\nRedis.call(j -> j.set("user", JsonKit.toJson(user)));\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[s._v("以上 call 用法，不涉及对象的序列化、反序列化，直接操作 jedis 对象，在当下 json 非常普及的背景下是 jfinal 官方推荐的使用方法")])])}),[],!1,null,null,null);e.default=t.exports}}]);