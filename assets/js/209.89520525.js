(window.webpackJsonp=window.webpackJsonp||[]).push([[209],{561:function(t,s,a){"use strict";a.r(s);var e=a(14),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_6-7-shared-method-扩展"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-7-shared-method-扩展"}},[t._v("#")]),t._v(" 6.7 Shared Method 扩展")]),t._v(" "),s("h3",{attrs:{id:"_1、基本用法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、基本用法"}},[t._v("#")]),t._v(" 1､基本用法")]),t._v(" "),s("p",[t._v("Enjoy 模板引擎可以极其简单的直接使用任意的 java 类中的 public 方法，并且被使用的 java 类无需实现任何接口也无需继承任何抽象类，完全无耦合。以下代码以 JFinal 之中的 com.jfinal.kit.StrKit 类为例：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public void configEngine(Engine me) {\n   me.addSharedMethod(new com.jfinal.kit.StrKit());\n}\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("以上代码已将StrKit类中所有的public方法添加为shared method，添加完成以后便可以直接在模板中使用，以下是代码示例：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("#if(isBlank(nickName))\n   ...\n#end\n \n#if(notBlank(title))\n   ...\n#end\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[t._v("上例中的isBlank 和 notBlank 方法都来自于StrKit类，这种扩展方式简单、便捷、无耦合。")]),t._v(" "),s("h3",{attrs:{id:"_2、默认-shared-method-配置扩展"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、默认-shared-method-配置扩展"}},[t._v("#")]),t._v(" 2、默认 Shared Method 配置扩展")]),t._v(" "),s("p",[t._v("Enjoy 模板引擎默认配置添加了 com.jfinal.template.ext.sharedmethod.SharedMethodLib 为 Shared Method，所以其中的方法可以直接使用不需要配置。里头有 isEmpty(...) 与 notEmpty(...) 两个方法可以使用。")]),t._v(" "),s("p",[t._v("isEmpty(...) 用来判断 Collection、Map、数组、Iterator、Iterable 类型对象中的元素个数是否为 0，其规如下：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("null 返回 true")])]),t._v(" "),s("li",[s("p",[t._v("List、Set 等一切继承自 Collection 的，返回 isEmpty()")])]),t._v(" "),s("li",[s("p",[t._v("Map 返回 isEmpty()")])]),t._v(" "),s("li",[s("p",[t._v("数组返回 length == 0")])]),t._v(" "),s("li",[s("p",[t._v("Iterator 返回  ! hasNext()")])]),t._v(" "),s("li",[s("p",[t._v("Iterable 返回  ! iterator().hasNext()")])])]),t._v(" "),s("p",[t._v("以下是代码示例：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("#if ( isEmpty(list) )\n    list 中的元素个数等于 0\n#end\n \n#if ( notEmpty(map) )\n    map 中的元素个数大于 0\n#end\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[t._v("如上所示，isEmpty(list) 判断 list 中的元素是否大于 0。notEmpty(...) 的功能与 isEmpty(...) 恰好相反，等价于 ! isEmpty(...)")])])}),[],!1,null,null,null);s.default=n.exports}}]);