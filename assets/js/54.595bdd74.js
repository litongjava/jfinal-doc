(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{407:function(e,t,n){"use strict";n.r(t);var a=n(14),s=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"_14-5-renderfactory"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_14-5-renderfactory"}},[e._v("#")]),e._v(" 14.5 RenderFactory")]),e._v(" "),t("p",[e._v("JFinal 3.0 has undergone a complete overhaul of the render module, extracting the "),t("code",[e._v("IRenderFactory")]),e._v(" interface. The original "),t("code",[e._v("RenderFactory")]),e._v(" has become the default implementation of the interface, eliminating the previous "),t("code",[e._v("IMainRenderFactory")]),e._v(", "),t("code",[e._v("IErrorRenderFactory")]),e._v(", and "),t("code",[e._v("IXmlRenderFactory")]),e._v(" interfaces. All extensions and customizations related to render can now be achieved by inheriting from "),t("code",[e._v("RenderFactory")]),e._v(". The 3.0 version of the render module allows for switching and customization of all renders, and the extension approach is entirely consistent. If older projects have extended "),t("code",[e._v("IMainRenderFactory")]),e._v(", they only need to be upgraded as follows:")]),e._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("public")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("class")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("MyRenderFactory")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("extends")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("RenderFactory")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("public")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Render")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("getRender")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("String")]),e._v(" view"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n     "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("MyRender")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("view"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])]),t("p",[e._v("Similarly, if you have previously extended "),t("code",[e._v("IErrorRenderFactory")]),e._v(" or "),t("code",[e._v("IXmlRenderFactory")]),e._v(", you only need to add the "),t("code",[e._v("getErrorRender(...)")]),e._v(" and "),t("code",[e._v("getXmlRender(...)")]),e._v(" methods to the "),t("code",[e._v("MyRenderFactory")]),e._v(" class above. After the extension, configure it in "),t("code",[e._v("configConstant")]),e._v(" as follows:")]),e._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("public")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("void")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("configConstant")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Constants")]),e._v(" me"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  me"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("setRenderFactory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("MyRenderFactory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("p",[e._v("JFinal 3.0 adopts a completely consistent extension method for all renders, making it easier to learn, more convenient to use, and straightforward to upgrade. Additionally, the "),t("code",[e._v("me()")]),e._v(" method in the original "),t("code",[e._v("RenderFactory")]),e._v(" class has been discontinued. If older projects depend on this, they only need to change "),t("code",[e._v("RenderFactory.me()")]),e._v(" directly to "),t("code",[e._v("RenderManager.me().getRenderFactory()")]),e._v(".")])])}),[],!1,null,null,null);t.default=s.exports}}]);