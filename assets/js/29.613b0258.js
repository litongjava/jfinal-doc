(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{382:function(e,t,a){"use strict";a.r(t);var n=a(14),s=Object(n.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"_1-11-special-statement"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-11-special-statement"}},[e._v("#")]),e._v(" 1.11 Special Statement")]),e._v(" "),t("p",[e._v("The JFinal project is a standard project that adheres to the Java Web specifications. Thus, developers' existing knowledge about project initiation and deployment remains valid. There's no need to treat JFinal projects any differently.")]),e._v(" "),t("p",[e._v("Therefore, all the startup and deployment methods introduced in this chapter pertain solely to the jfinal-undertow and jetty-server integrations provided by JFinal internally. If you encounter startup issues and are not using JFinal's integrated undertow or jetty, then the issue is not related to JFinal, and there's no need to refer to this chapter. Searching online for Java Web startup and deployment solutions should suffice.")]),e._v(" "),t("p",[e._v("If you choose not to use the undertow or jetty integrations provided by JFinal for startup, you can remove the relevant jar package dependencies. For Maven projects, you can also delete the relevant dependency configurations.")]),e._v(" "),t("p",[e._v('Lastly, if you don\'t deploy using jfinal undertow, then you need to change the packaging type in pom.xml to "war", otherwise, a jar package will be produced:')]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("<packaging>war</packaging>\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("Again, this issue is not related to JFinal but is basic Maven knowledge.")])])}),[],!1,null,null,null);t.default=s.exports}}]);