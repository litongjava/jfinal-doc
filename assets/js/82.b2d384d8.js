(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{435:function(e,a,t){"use strict";t.r(a);var s=t(14),n=Object(s.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"_4-6-aop-tool"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-aop-tool"}},[e._v("#")]),e._v(" 4.6 Aop tool")]),e._v(" "),a("h3",{attrs:{id:"_1-aop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-aop"}},[e._v("#")]),e._v(" 1. Aop")]),e._v(" "),a("h4",{attrs:{id:"_1-1-get"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-get"}},[e._v("#")]),e._v(" 1.1 get(...)")]),e._v(" "),a("p",[e._v("Aop.get(...) allows the creation of objects at any time and space and performs dependency injection on them. For instance:")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Service service = Aop.get(Service.class);\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("The above code creates a Service object. If the Service has interceptors configured with @Before, they will be activated. If the properties in Service are annotated with @Inject, they will be injected with dependent objects.")]),e._v(" "),a("h4",{attrs:{id:"_1-2-inject"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-inject"}},[e._v("#")]),e._v(" 1.2 inject(...)")]),e._v(" "),a("p",[e._v("Aop.inject(...) can inject target objects at any time and space. This method, compared to Aop.get(...), lacks the object creation functionality:")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Service service = new Service(...);\nAop.inject(service);\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("The above code will inject dependencies into properties of the Service class that have been annotated with @Inject.")]),e._v(" "),a("h3",{attrs:{id:"_2-aopmanager"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-aopmanager"}},[e._v("#")]),e._v(" 2. AopManager")]),e._v(" "),a("p",[e._v("AopManager is used to manage various Aop configurations.")]),e._v(" "),a("h4",{attrs:{id:"_2-1-addmapping"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-addmapping"}},[e._v("#")]),e._v(" 2.1 addMapping(...)")]),e._v(" "),a("p",[e._v("addMapping is used to establish a mapping relationship between an interface/abstract class and its implementation class. For instance:")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("AopManager.me().addMapping(Service.class, MyService.class);\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("With the mapping above, the following code will create a MyService object for Service, not a Service object:")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// Here, the retrieved object is MyService\nAop.get(Service.class);\n \n// Here, the injected object is MyService\n@Inject\nService service;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("p",[e._v("The purpose of AopManager.me().addMapping(...) is to specify the concrete implementation class to be injected for an interface or abstract class.")]),e._v(" "),a("h4",{attrs:{id:"_2-2-addsingletonobject"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-addsingletonobject"}},[e._v("#")]),e._v(" 2.2 addSingletonObject(...)")]),e._v(" "),a("p",[e._v("Since Aop does not support passing parameters to constructors when creating objects, addSingletonObject(...) is provided to add singleton objects:")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// The Service class constructor has two parameters passed in\nService service = new Service(paraAaa, paraBbb);\nAopManager.me().addSingletonObject(service);\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("After completing the above code, you can retrieve the singleton object anywhere as follows:")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// Retrieving uses the singleton object\nservice = Aop.get(Service.class);\n \n// Injection can also use the previously configured singleton object\n@Inject\nService service;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("p",[e._v("Before adding as a singleton object, dependencies can be injected into it:")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Service service = new Service(paraAaa, paraBbb);\n// Here, dependencies are injected into Service\nAop.inject(service);\n \n// After injecting dependencies for the singleton, add it as a singleton for subsequent use\nAopManager.me().addSingletonObject(service);\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("h4",{attrs:{id:"_2-3-setaopfactory"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-setaopfactory"}},[e._v("#")]),e._v(" 2.3 setAopFactory(...)")]),e._v(" "),a("p",[e._v("setAopFactory(...) allows users to extend the AopFactory implementation class to implement more extensible features. For example, the jboot project extension for injecting remote access objects: https://gitee.com/JbootProjects/jboot/blob/master/src/main/java/io/jboot/aop/JbootAopFactory.java. In JbootAopFactory.java, doInjectRPC implements remote procedure call injection.")])])}),[],!1,null,null,null);a.default=n.exports}}]);